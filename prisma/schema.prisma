// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Appointments {
  id             String    @id @default(uuid())
  provider       Provider  @relation(fields: [providerId], references: [id])
  providerId     String
  consumer       Consumer  @relation(fields: [consumerId], references: [id])
  consumerId     String
  date           String
  timeTo         String
  timeFrom       String
  bookingThrough Json
  priority       Json
  isDeleted      Boolean   @default(false)
  services       Service[]
}

model Provider {
  id           String         @id @default(uuid())
  name         Json?          @default("{\"ar\": \"\", \"en\": \"\"}")
  isDeleted    Boolean        @default(false)
  Appointments Appointments[]
  ServicePrice ServicePrice[]
  Attachment   Attachment[]
}

model Consumer {
  id             String           @id @default(uuid())
  name           Json?            @default("{\"ar\": \"\", \"en\": \"\"}")
  isDeleted      Boolean          @default(false)
  age            Int              @default(22)
  Appointments   Appointments[]
  ConsumerBasket ConsumerBasket[]
  Attachment     Attachment[]
}

model Service {
  id                    String                  @id @default(uuid())
  name                  Json?                   @default("{\"ar\": \"\", \"en\": \"\"}")
  isDeleted             Boolean                 @default(false)
  appoitment            Appointments[]
  ServicePrice          ServicePrice[]
  ConsumerBasketService ConsumerBasketService[]
  ServiceInPackage      ServiceInPackage[]
  Attachment            Attachment[]
}

model ServicePrice {
  id         String   @id @default(uuid())
  privider   Provider @relation(fields: [providerId], references: [id])
  providerId String
  service    Service  @relation(fields: [serviceId], references: [id])
  serviceId  String
  price      Decimal
  isDeleted  Boolean  @default(false)
}

model Package {
  id             String             @id @default(uuid())
  name           String             @default("")
  services       ServiceInPackage[]
  totalPrice     Decimal            @default(0)
  isDeleted      Boolean            @default(false)
  ConsumerBasket ConsumerBasket[]
}

model ServiceInPackage {
  id        String  @id @default(uuid())
  package   Package @relation(fields: [packageId], references: [id])
  packageId String
  service   Service @relation(fields: [serviceId], references: [id])
  serviceId String
  quantity  Int
  isDeleted Boolean @default(false)
}

model ConsumerBasket {
  id                    String                  @id @default(uuid())
  consumer              Consumer                @relation(fields: [consumerId], references: [id])
  consumerId            String
  Package               Package?                @relation(fields: [packageId], references: [id])
  packageId             String?
  isDeleted             Boolean                 @default(false)
  ConsumerBasketService ConsumerBasketService[]
}

model ConsumerBasketService {
  id               Int            @id @default(autoincrement())
  consumerBasket   ConsumerBasket @relation(fields: [consumerBasketId], references: [id])
  consumerBasketId String
  used             Boolean        @default(false)
  Service          Service?       @relation(fields: [serviceId], references: [id])
  serviceId        String?
  isDeleted        Boolean        @default(false)
}

model Attachment {
  id         String    @id @default(uuid())
  url        String
  name       String?
  consumer   Consumer? @relation(fields: [consumerId], references: [id])
  consumerId String?
  provider   Provider? @relation(fields: [providerId], references: [id])
  providerId String?
  service    Service?  @relation(fields: [serviceId], references: [id])
  serviceId  String?
}

// npx prisma migrate dev --name <migration-name>

//  npx  prisma  generate
